<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>RZDemoDockerExporter</artifactId>
  <version>1.0.0</version>
  <name>RZDemoDockerExporter</name>
  <description>RZDemoDockerExporter</description>
  <properties>
    <keystore.type>JKS</keystore.type>
    <keystore.password>wso2carbon</keystore.password>
    <ciphertool.enable>false</ciphertool.enable>
    <artifact.types>jaggery/app=zip,synapse/priority-executor=xml,synapse/inbound-endpoint=xml,service/rule=aar,synapse/message-store=xml,event/stream=json,service/meta=xml,datasource/datasource=xml,synapse/proxy-service=xml,bpel/workflow=zip,synapse/sequence=xml,synapse/endpointTemplate=xml,carbon/application=car,wso2/gadget=dar,synapse/api=xml,synapse/event-source=xml,synapse/message-processors=xml,event/receiver=xml,lib/dataservice/validator=jar,synapse/template=xml,synapse/endpoint=xml,lib/carbon/ui=jar,lib/synapse/mediator=jar,event/publisher=xml,synapse/local-entry=xml,synapse/task=xml,webapp/jaxws=war,registry/resource=zip,synapse/configuration=xml,service/axis2=aar,synapse/lib=zip,synapse/sequenceTemplate=xml,event/execution-plan=siddhiql,service/dataservice=dbs,web/application=war,lib/library/bundle=jar</artifact.types>
    <keystore.alias>wso2carbon</keystore.alias>
    <keystore.name>wso2carbon.jks</keystore.name>
    <dockerfile.tag>rzdemo</dockerfile.tag>
    <dockerfile.base.image>wso2/wso2mi:1.2.0</dockerfile.base.image>
    <dockerfile.repository>docker.io/chintana</dockerfile.repository>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.example</groupId>
      <artifactId>RZDemoCompositeExporter</artifactId>
      <version>1.0.0</version>
      <type>car</type>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>ignore</checksumPolicy>
      </releases>
      <id>wso2-nexus</id>
      <url>http://maven.wso2.org/nexus/content/groups/wso2-public/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>ignore</checksumPolicy>
      </releases>
      <id>wso2-nexus</id>
      <url>http://maven.wso2.org/nexus/content/groups/wso2-public/</url>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <buildcommands/>
          <projectnatures>
            <projectnature>org.wso2.developerstudio.eclipse.docker.distribution.project.nature</projectnature>
          </projectnatures>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/../CompositeApps</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <excludeTransitive>true</excludeTransitive>
            </configuration>
          </execution>
        </executions>
        <configuration/>
      </plugin>
      <plugin>
        <groupId>org.wso2.maven</groupId>
        <artifactId>mi-container-config-mapper</artifactId>
        <version>5.2.32</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>config-mapper-parser</id>
            <phase>package</phase>
            <goals>
              <goal>config-mapper-parser</goal>
            </goals>
            <configuration>
              <miVersion>1.2.0</miVersion>
              <executeCipherTool>${ciphertool.enable}</executeCipherTool>
              <keystoreName>${keystore.name}</keystoreName>
              <keystoreAlias>${keystore.alias}</keystoreAlias>
              <keystoreType>${keystore.type}</keystoreType>
              <keystorePassword>${keystore.password}</keystorePassword>
              <projectLocation>${project.basedir}</projectLocation>
            </configuration>
          </execution>
        </executions>
        <configuration/>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.4.13</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>docker-build</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <dockerfile.repository>${dockerfile.repository}</dockerfile.repository>
              <dockerfile.tag>${dockerfile.tag}</dockerfile.tag>
              <buildArgs>
                <BASE_IMAGE>${dockerfile.base.image}</BASE_IMAGE>
              </buildArgs>
            </configuration>
          </execution>
          <execution>
            <id>docker-push</id>
            <phase>install</phase>
            <goals>
              <goal>push</goal>
            </goals>
            <configuration>
              <dockerfile.username>${dockerfile.username}</dockerfile.username>
              <dockerfile.password>${dockerfile.password}</dockerfile.password>
              <dockerfile.repository>${dockerfile.repository}</dockerfile.repository>
              <dockerfile.tag>${dockerfile.tag}</dockerfile.tag>
            </configuration>
          </execution>
        </executions>
        <configuration/>
      </plugin>
    </plugins>
  </build>
</project>
