{
  "user_store.type": {
    "database": {
      "user_store.class": "org.wso2.micro.integrator.security.user.core.jdbc.JDBCUserStoreManager",
      "user_store.properties.TenantManager": "org.wso2.carbon.user.core.tenant.JDBCTenantManager",
      "user_store.properties.ReadOnly": false,
      "user_store.properties.ReadGroups": true,
      "user_store.properties.WriteGroups": true,
      "user_store.properties.UsernameJavaRegEx": "^[\\S]{3,30}$",
      "user_store.properties.UsernameJavaScriptRegEx": "^[\\S]{3,30}$",
      "user_store.properties.UsernameJavaRegExViolationErrorMsg": "Username pattern policy violated",
      "user_store.properties.PasswordJavaRegEx": "^[\\S]{5,30}$",
      "user_store.properties.PasswordJavaScriptRegEx": "^[\\S]{5,30}$",
      "user_store.properties.PasswordJavaRegExViolationErrorMsg": "Password length should be within 5 to 30 characters",
      "user_store.properties.RolenameJavaRegEx": "^[\\S]{3,30}$",
      "user_store.properties.RolenameJavaScriptRegEx": "^[\\S]{3,30}$",
      "user_store.properties.CaseInsensitiveUsername": true,
      "user_store.properties.SCIMEnabled": false,
      "user_store.properties.IsBulkImportSupported": true,
      "user_store.properties.PasswordDigest": "SHA-256",
      "user_store.properties.StoreSaltedPassword": true,
      "user_store.properties.MultiAttributeSeparator": ",",
      "user_store.properties.MaxUserNameListLength": "100",
      "user_store.properties.MaxRoleNameListLength": "100",
      "user_store.properties.UserRolesCacheEnabled": true,
      "user_store.properties.UserNameUniqueAcrossTenants": false
    },
    "read_only_ldap": {
      "user_store.class": "org.wso2.micro.integrator.security.user.core.ldap.ReadOnlyLDAPUserStoreManager",
      "user_store.properties.ConnectionURL": "ldap://localhost:10389",
      "user_store.properties.ConnectionName": "uid=admin,ou=system",
      "user_store.properties.ConnectionPassword": "admin",
      "user_store.properties.AnonymousBind": false,
      "user_store.properties.UserSearchBase": "ou=Users,$ref{user_store.base_dn}",
      "user_store.properties.GroupSearchBase": "ou=Groups,$ref{user_store.base_dn}",
      "user_store.properties.UserNameAttribute": "uid",
      "user_store.properties.UserNameSearchFilter": "(&amp;(objectClass=person)(uid=?))",
      "user_store.properties.UserNameListFilter": "(objectClass=person)",
      "user_store.properties.DisplayNameAttribute": "",
      "user_store.properties.GroupNameAttribute": "cn",
      "user_store.properties.GroupNameSearchFilter": "(&amp;(objectClass=groupOfNames)(cn=?))",
      "user_store.properties.GroupNameListFilter": "(objectClass=groupOfNames)",
      "user_store.properties.MembershipAttribute": "member",
      "user_store.properties.BackLinksEnabled": false,
      "user_store.properties.UsernameJavaRegEx": "[a-zA-Z0-9._\\-|//]{3,30}$",
      "user_store.properties.PasswordJavaRegEx": "^[\\S]{5,30}$",
      "user_store.properties.RolenameJavaRegEx": "[a-zA-Z0-9._\\-|//]{3,30}$",
      "user_store.properties.SCIMEnabled": false,
      "user_store.properties.PasswordHashMethod": "PLAIN_TEXT",
      "user_store.properties.MultiAttributeSeparator": ",",
      "user_store.properties.MaxUserNameListLength": "100",
      "user_store.properties.MaxRoleNameListLength": "100",
      "user_store.properties.UserRolesCacheEnabled": true,
      "user_store.properties.ConnectionPoolingEnabled": true,
      "user_store.properties.LDAPConnectionTimeout": "5000",
      "user_store.properties.ReplaceEscapeCharactersAtUserLogin": true,
      "user_store.properties.ConnectionRetryDelay": "120000",
      "user_store.properties.EnableMaxUserLimitForSCIM": "false"
    },
    "read_write_ldap": {
      "user_store.class": "org.wso2.micro.integrator.security.user.core.ldap.ReadWriteLDAPUserStoreManager",
      "user_store.properties.ConnectionURL": "ldap://localhost:10389",
      "user_store.properties.ConnectionName": "uid=admin,ou=system",
      "user_store.properties.ConnectionPassword": "admin",
      "user_store.properties.UserSearchBase": "ou=Users,$ref{user_store.base_dn}",
      "user_store.properties.GroupSearchBase": "ou=Groups,$ref{user_store.base_dn}",
      "user_store.properties.AnonymousBind": false,
      "user_store.properties.WriteGroups": true,
      "user_store.properties.UserNameAttribute": "uid",
      "user_store.properties.UserNameSearchFilter": "(&amp;(objectClass=person)(uid=?))",
      "user_store.properties.UserNameListFilter": "(objectClass=person)",
      "user_store.properties.UserEntryObjectClass": "identityPerson",
      "user_store.properties.DisplayNameAttribute": "",
      "user_store.properties.GroupNameAttribute": "cn",
      "user_store.properties.GroupNameSearchFilter": "(&amp;(objectClass=groupOfNames)(cn=?))",
      "user_store.properties.GroupNameListFilter": "(objectClass=groupOfNames)",
      "user_store.properties.GroupEntryObjectClass": "groupOfNames",
      "user_store.properties.MembershipAttribute": "member",
      "user_store.properties.BackLinksEnabled": false,
      "user_store.properties.IsBulkImportSupported": true,
      "user_store.properties.UsernameJavaRegEx": "[a-zA-Z0-9._\\-|//]{3,30}$",
      "user_store.properties.PasswordJavaRegEx": "^[\\S]{5,30}$",
      "user_store.properties.RolenameJavaRegEx": "[a-zA-Z0-9._\\-|//]{3,30}$",
      "user_store.properties.SCIMEnabled": true,
      "user_store.properties.PasswordHashMethod": "PLAIN_TEXT",
      "user_store.properties.EmptyRolesAllowed": true,
      "user_store.properties.kdcEnabled": false,
      "user_store.properties.defaultRealmName": "WSO2.ORG",
      "user_store.properties.StartTLSEnabled": false,
      "user_store.properties.MultiAttributeSeparator": ",",
      "user_store.properties.MaxUserNameListLength": "100",
      "user_store.properties.MaxRoleNameListLength": "100",
      "user_store.properties.UserRolesCacheEnabled": true,
      "user_store.properties.ConnectionPoolingEnabled": true,
      "user_store.properties.LDAPConnectionTimeout": "5000",
      "user_store.properties.ReplaceEscapeCharactersAtUserLogin": true,
      "user_store.properties.ConnectionRetryDelay": "120000",
      "user_store.properties.EnableMaxUserLimitForSCIM": "false"
    }
  },
  "transport.mail.listener.enable": {
    "true": {
      "transport.mail.listener.name": "mailto"
    }
  },
  "transport.sap.listener.idoc.enable": {
    "true": {
      "transport.sap.listener.idoc.class": "org.wso2.carbon.transports.sap.SAPTransportListener"
    }
  },
  "transport.sap.listener.bapi.enable": {
    "true": {
      "transport.sap.listener.bapi.class": "org.wso2.carbon.transports.sap.SAPTransportListener"
    }
  },
  "transport.sap.sender.idoc.enable": {
    "true": {
      "transport.sap.sender.idoc.class": "org.wso2.carbon.transports.sap.SAPTransportSender"
    }
  },
  "transport.sap.sender.bapi.enable": {
    "true": {
      "transport.sap.sender.bapi.class": "org.wso2.carbon.transports.sap.SAPTransportSender"
    }
  },
  "transport.blocking.sap.listener.idoc.enable": {
    "true": {
      "transport.blocking.sap.listener.idoc.class": "org.wso2.carbon.transports.sap.SAPTransportListener"
    }
  },
  "transport.blocking.sap.listener.bapi.enable": {
    "true": {
      "transport.blocking.sap.listener.bapi.class": "org.wso2.carbon.transports.sap.SAPTransportListener"
    }
  },
  "transport.blocking.sap.sender.idoc.enable": {
    "true": {
      "transport.blocking.sap.sender.idoc.class": "org.wso2.carbon.transports.sap.SAPTransportSender"
    }
  },
  "transport.blocking.sap.sender.bapi.enable": {
    "true": {
      "transport.blocking.sap.sender.bapi.class": "org.wso2.carbon.transports.sap.SAPTransportSender"
    }
  },
  "transport.ws.sender.enable": {
    "true": {
      "transport.ws.sender.parameter.'ws.outflow.dispatch.sequence'": "outflowDispatchSeq",
      "transport.ws.sender.parameter.'ws.outflow.dispatch.fault.sequence'": "outflowFaultSeq"
    }
  },
  "transport.wss.sender.enable": {
    "true": {
      "transport.wss.sender.parameter.'ws.outflow.dispatch.sequence'": "outflowDispatchSeq",
      "transport.wss.sender.parameter.'ws.outflow.dispatch.fault.sequence'": "outflowFaultSeq",
      "transport.wss.sender.truststore_location": "$ref{truststore.file_name}",
      "transport.wss.sender.truststore_password": "$ref{truststore.primary.password}"
    }
  },
  "transport.http.listener.certificate_revocation_verifier_enable": {
    "true": {
      "transport.http.listener.certificate_revocation_cache_size": "1024",
      "transport.http.listener.certificate_revocation_cache_delay": "1000"
    }
  },
  "transport.http.sender.certificate_revocation_verifier_enable": {
    "true": {
      "transport.http.sender.certificate_revocation_cache_size": "1024",
      "transport.http.sender.certificate_revocation_cache_delay": "1000"
    }
  }

}
